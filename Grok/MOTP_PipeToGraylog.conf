input {
#    beats {
#        port => "5044"
#	client_inactivity_timeout => 2400
#	#codec => json
#    }
    
#    tcp {
#        port => "5514"
#        type => "syslog"
#    }

    syslog{
         port => 5514
#         codec => cef
         type => "syslog"        
    }

}
filter {

		if [type] == "syslog" {
		
			if "operation" in [message]{
		      grok {
        		match => { "message" => "<%{POSINT:syslog_priority}>%{POSINT:[syslog_version]} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:[syslog_host]} %{DATA:[syslog_program]} %{DATA:[syslog_pid]} - %{DATA:[syslog_m1]} \[operation\]:%{DATA:[otp_operation]}, \[account\]:%{DATA:[otp_account]}, \[source IP\]:%{DATA:[otp_source_IP]}, \[pc name\]:%{DATA:[otp_pc_name]}, \[winlogon version\]:%{DATA:[otp_winlogon_version]}, \[error code\]:%{DATA:[otp_errorcode]}, \[token type\]:%{DATA:[otp_token_type]}, \[start time\]:%{DATA:[otp_start_time]}, \[end time\]:%{DATA:[otp_end_time]}, \[execute time\]:%{DATA:[otp_execute_time]}, \[message\]:%{GREEDYDATA:[otp_msg]}"}
			   }				
		   }else{
		      grok {
        		match => { "message" => "<%{POSINT:syslog_priority}>%{POSINT:[syslog_version]} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:[syslog_host]} %{DATA:[syslog_program]} %{DATA:[syslog_pid]} %{GREEDYDATA:[syslog_message]}"}
			   }				
		   }
		}
		
		if [type] == "wineventlog" and [event_id] == 5156 {
				#drop{}
				}
}
output {
		gelf {
				host => ["10.1.30.141"]
				#,"172.16.160.42","172.16.160.45"]
				protocol => "TCP"
				port => "12201"
				sender => "%{message}"
				}


#		stdout { 
#				codec => rubydebug 
#				}
}
